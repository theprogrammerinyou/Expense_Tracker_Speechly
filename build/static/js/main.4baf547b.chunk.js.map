{"version":3,"sources":["context/contextReducer.js","context/context.js","components/InfoCard.jsx","utils/formatDate.js","components/Main/Form/styles.js","constants/categories.js","components/Snackbar/styles.js","components/Snackbar/Snackbar.jsx","components/Main/Form/Form.jsx","components/Main/List/styles.js","components/Main/List/List.jsx","components/Main/styles.js","components/Main/Main.jsx","useTransactions.js","components/Details/styles.js","components/Details/Details.jsx","styles.js","App.js","index.js"],"names":["contextReducer","state","action","transactions","type","filter","t","id","payload","localStorage","setItem","JSON","stringify","initialState","parse","getItem","ExpenseTrackerContext","createContext","Provider","children","useReducer","dispatch","balance","reduce","acc","currVal","amount","value","deleteTransaction","addTransaction","transaction","isIncome","Math","round","random","Infocard","style","textAlign","padding","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","makeStyles","radioGroup","display","justifyContent","marginBottom","button","marginTop","incomeColors","expenseColors","incomeCategories","color","expenseCategories","theme","root","width","spacing","CustomizedSnackbar","open","setOpen","classes","useStyles","handleClose","event","reason","className","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","elevation","variant","category","Form","useState","formData","setFormData","useContext","segment","useSpeechContext","createTransaction","Number","isNaN","includes","uuidv4","useEffect","intent","isFinal","entities","forEach","e","charAt","slice","toLowerCase","map","iC","eC","selectedCategories","Grid","container","item","xs","Typography","align","gutterBottom","words","w","FormControl","fullWidth","InputLabel","Select","onChange","target","MenuItem","c","TextField","label","Button","onClick","avatarIncome","backgroundColor","green","avatarExpense","palette","getContrastText","red","list","maxHeight","overflow","List","dense","Slide","direction","in","mountOnEnter","unmountOnExit","ListItem","ListItemAvatar","Avatar","MoneyOff","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","aria-label","Delete","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","cartContent","divider","margin","Main","useStlyes","Card","CardHeader","title","subheader","CardContent","lineHeight","InfoCard","Divider","cardContent","useTransactions","transactionsPerType","total","categories","console","log","find","filteredCategories","chartData","datasets","data","labels","income","borderBottom","expense","Details","desktop","breakpoints","up","mobile","down","main","paddingBottom","last","grid","App","speechState","useRef","SpeechState","Recording","current","scrollIntoView","alignItems","justify","sm","ref","ReactDOM","render","appId","language","document","getElementById"],"mappings":"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","file":"static/js/main.4baf547b.chunk.js","sourcesContent":["const contextReducer = (state, action) => {\r\n    let transactions;\r\n\r\n    switch (action.type)\r\n    {\r\n        case 'DELETE_TRANSACTION':\r\n            transactions = state.filter((t) => t.id !== action.payload);\r\n            localStorage.setItem('transactions', JSON.stringify(transactions));\r\n            return transactions;\r\n        case 'ADD_TRANSACTION':\r\n            transactions = [action.payload, ...state];\r\n            localStorage.setItem('transactions', JSON.stringify(transactions));\r\n            return transactions;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default contextReducer;","import React, { useReducer, createContext } from 'react';\r\nimport contextReducer from './contextReducer';\r\n\r\nconst initialState = JSON.parse(localStorage.getItem('transactions')) || [{\"amount\" : 75, \"category\" : \"House\", \"type\" : \"Expense\", \"date\":\"2020-12-22\", \"id\" : \"a429ef6d-1591-475b-88c0-5620edd9d876\"}];\r\n\r\nexport const ExpenseTrackerContext = createContext(initialState);\r\n\r\nexport const Provider = ({ children }) => {\r\n\r\n    const [transactions, dispatch] = useReducer(contextReducer, initialState);\r\n\r\n    //Action creators. \r\n    const deleteTransaction = (id) => { dispatch({ type: 'DELETE_TRANSACTION', payload: id }); }\r\n    const addTransaction = (transaction) => { dispatch({ type: 'ADD_TRANSACTION', payload: transaction }); }\r\n\r\n    const balance = transactions.reduce((acc, currVal) => (currVal.type === 'Expense' ? acc - currVal.amount : acc + currVal.amount), 0);\r\n\r\n    return (\r\n        <ExpenseTrackerContext.Provider value={{\r\n            deleteTransaction,\r\n            addTransaction,\r\n            transactions,\r\n            balance\r\n        }} >\r\n            {children}\r\n        </ExpenseTrackerContext.Provider>\r\n    )\r\n}","import React from 'react'\r\n\r\nconst isIncome = Math.round(Math.random());\r\n\r\nconst Infocard = () => {\r\n    return (\r\n      <div style ={{ textAlign: 'center', padding: '0  10%' }}>\r\n        Try Saying : <br />\r\n        Add {isIncome ? \" Income \" : \" Expense \"}\r\n        for {isIncome ? \" $100 \" : \"$50 \"}\r\n        in category {isIncome ? \" Business \" : \" House \"}\r\n        for {isIncome ? \" Monday \" : \" Sunday \"}...\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Infocard\r\n","const formatDate = (date) => {\r\n    const d = new Date(date);\r\n    let month = `${d.getMonth() + 1}`;\r\n    let day = `${d.getDate()}`;\r\n    const year = `${d.getFullYear()}`;\r\n\r\n    if (month.length < 2)\r\n    {\r\n        month = `0${month}`;\r\n    }\r\n    if (day.length < 2)\r\n    {\r\n        day = `0${day}`;\r\n    }\r\n\r\n    return [year, month, day].join('-');\r\n\r\n}\r\n\r\nexport default formatDate","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n  radioGroup: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginBottom: '-10px',\r\n  },\r\n  button: {\r\n    marginTop: '20px',\r\n  },\r\n}));","const incomeColors = ['#123123', '#154731', '#165f40', '#16784f', '#14915f', '#10ac6e', '#0bc77e', '#04e38d', '#00ff9d'];\r\nconst expenseColors = ['#b50d12', '#bf2f1f', '#c9452c', '#d3583a', '#dc6a48', '#e57c58', '#ee8d68', '#f79d79', '#ffae8a', '#cc474b', '#f55b5f'];\r\n\r\nexport const incomeCategories = [\r\n  { type: 'Business', amount: 0, color: incomeColors[0] },\r\n  { type: 'Investments', amount: 0, color: incomeColors[1] },\r\n  { type: 'Extra income', amount: 0, color: incomeColors[2] },\r\n  { type: 'Deposits', amount: 0, color: incomeColors[3] },\r\n  { type: 'Lottery', amount: 0, color: incomeColors[4] },\r\n  { type: 'Gifts', amount: 0, color: incomeColors[5] },\r\n  { type: 'Salary', amount: 0, color: incomeColors[6] },\r\n  { type: 'Savings', amount: 0, color: incomeColors[7] },\r\n  { type: 'Rental income', amount: 0, color: incomeColors[8] },\r\n];\r\n\r\nexport const expenseCategories = [\r\n  { type: 'Bills', amount: 0, color: expenseColors[0] },\r\n  { type: 'Car', amount: 0, color: expenseColors[1] },\r\n  { type: 'Clothes', amount: 0, color: expenseColors[2] },\r\n  { type: 'Travel', amount: 0, color: expenseColors[3] },\r\n  { type: 'Food', amount: 0, color: expenseColors[4] },\r\n  { type: 'Shopping', amount: 0, color: expenseColors[5] },\r\n  { type: 'House', amount: 0, color: expenseColors[6] },\r\n  { type: 'Entertainment', amount: 0, color: expenseColors[7] },\r\n  { type: 'Phone', amount: 0, color: expenseColors[8] },\r\n  { type: 'Pets', amount: 0, color: expenseColors[9] },\r\n  { type: 'Other', amount: 0, color: expenseColors[10] },\r\n];\r\n\r\nexport const resetCategories = () => {\r\n  incomeCategories.forEach((c) => c.amount = 0);\r\n  expenseCategories.forEach((c) => c.amount = 0);\r\n};","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst CustomizedSnackbar = ({ open, setOpen }) => {\r\n    const classes = useStyles();\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') return;\r\n\r\n        setOpen(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = {classes.root}>\r\n            <Snackbar\r\n                anchorOrigin = {{ vertical: 'top', horizontal: 'right' }}\r\n                open = {open}\r\n                autoHideDuration = {3000}\r\n                onClose={handleClose} >\r\n                <MuiAlert onClose={handleClose} severity=\"success\" elevation={6} variant = \"filled\">\r\n                    Transaction succesfully created.\r\n                </MuiAlert>\r\n            </Snackbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomizedSnackbar\r\n\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { TextField, Typography, Grid, Button, InputLabel, Select, MenuItem, FormControl } from '@material-ui/core';\r\nimport { ExpenseTrackerContext } from \"../../../context/context\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport useStyles from './styles';\r\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\r\nimport CustomizedSnackbar from '../../Snackbar/Snackbar';\r\n\r\nconst initialState = {\r\n    amount : '',\r\n    category: '',\r\n    type: 'Income',\r\n    date : formatDate(new Date()),\r\n}\r\n\r\nconst Form = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [formData, setFormData] = useState(initialState);\r\n    const { addTransaction } = useContext(ExpenseTrackerContext);\r\n    const { segment } = useSpeechContext();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const createTransaction = () => {\r\n        if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n        const transaction = { ...formData, amount: Number(formData.amount), id: uuidv4() };\r\n\r\n        setOpen(true);\r\n        addTransaction(transaction);\r\n        setFormData(initialState);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (segment) {\r\n            if (segment.intent.intent === 'add_expense')\r\n            {\r\n                setFormData({ ...formData, type: 'Expense' });\r\n            } else if (segment.intent.intent === 'add_income')\r\n            {\r\n                setFormData({ ...formData, type: 'Income' });\r\n            } else if (segment.isFinal && segment.intent.intent === \"create_transaction\") {\r\n                return createTransaction();\r\n            } else if (segment.isFinal && segment.intent.intent === \"cancel_transaction\") {\r\n                return setFormData(initialState);\r\n            }\r\n\r\n            segment.entities.forEach((e) => {\r\n                const category = `${e.value.charAt(0)}${e.value.slice(1).toLowerCase()}`;\r\n                switch (e.type) {\r\n                    case 'amount':\r\n                        setFormData({ ...formData, amount: e.value });\r\n                        break;\r\n                    case 'category':\r\n                        if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n                            setFormData({ ...formData, type: 'Income', category });\r\n                        } else if (expenseCategories.map((eC) => eC.type).includes(category)) {\r\n                            setFormData({ ...formData, type: 'Expense', category });\r\n                        }\r\n                        \r\n                        break;\r\n                    case 'date':\r\n                        setFormData({ ...formData, date: e.value });\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n\r\n            if (segment.isFinal && formData.amount && formData.type && formData.category && formData.date){\r\n                createTransaction();\r\n            }\r\n        }\r\n    }, [segment])\r\n\r\n    const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n    \r\n    return (\r\n\r\n        <Grid container spacing={2}>\r\n            <CustomizedSnackbar open = {open} setOpen = {setOpen} />\r\n            <Grid item xs={12}>\r\n                <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n                    {segment && segment.words.map((w) => w.value).join(\" \")}\r\n                </Typography>\r\n            </Grid>\r\n                \r\n            <Grid item xs={6}>\r\n            <FormControl fullWidth>\r\n                <InputLabel> Type </InputLabel>\r\n                <Select value = {formData.type} onChange = {(e) => setFormData({...formData, type : e.target.value})} >\r\n                <MenuItem value=\"Income\"> Income </MenuItem>\r\n                <MenuItem value=\"Expense\"> Expense </MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            </Grid>\r\n                \r\n            <Grid item xs={6}>\r\n            <FormControl fullWidth>\r\n                <InputLabel> Category </InputLabel>\r\n                <Select value = {formData.category} onChange = {(e) => setFormData({...formData, category : e.target.value})} >\r\n                    {selectedCategories.map((c) => <MenuItem key = {c.type} value = {c.type}>{c.type}</MenuItem>)}\r\n                </Select>\r\n            </FormControl>\r\n            </Grid>\r\n                \r\n            <Grid item xs = {6}>\r\n                <TextField type=\"number\" label=\"Amount\" value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} fullWidth />\r\n            </Grid>\r\n                \r\n            <Grid item xs = {6}>\r\n                <TextField type = \"date\" label = \"date\" value = {formData.date} onChange = {(e) => setFormData({...formData, date : formatDate(e.target.value)})} fullWidth/>\r\n            </Grid>\r\n\r\n            <Button className = {classes.button} variant = \"outlined\" color = \"primary\" fullWidth onClick = {createTransaction}> Create </Button>\r\n            \r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Form\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { red, green } from \"@material-ui/core/colors\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  avatarIncome: {\r\n    color: \"#fff\",\r\n    backgroundColor: green[500],\r\n  },\r\n  avatarExpense: {\r\n    color: theme.palette.getContrastText(red[500]),\r\n    backgroundColor: red[500],\r\n  },\r\n  list: {\r\n    maxHeight: \"150px\",\r\n    overflow: \"auto\",\r\n  },\r\n}));\r\n","import React, {useContext} from 'react';\r\nimport { List as MUIList, ListItem, ListItemAvatar, ListItemText, Avatar, ListItemSecondaryAction, IconButton, Slide } from '@material-ui/core';\r\n\r\nimport { Delete, MoneyOff } from '@material-ui/icons';\r\n\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport useStyles from './styles';\r\n\r\n\r\nconst List = () => {\r\n\r\n    const classes = useStyles();\r\n    const { deleteTransaction, transactions } = useContext(ExpenseTrackerContext);\r\n\r\n    \r\n    return (\r\n        <MUIList dense = {false} className = {classes.list} >\r\n            {transactions.map((transaction) => (\r\n                <Slide direction = \"down\" in mountOnEnter unmountOnExit key = {transaction.id}>\r\n                    <ListItem>\r\n                        <ListItemAvatar>\r\n                            <Avatar className = {transaction.type === \"Income\" ? classes.avatarIncome : classes.avatarExpense}>\r\n                                <MoneyOff />\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={transaction.category} secondary={`$${transaction.amount} - ${transaction.date}`} />\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deleteTransaction(transaction.id)} >\r\n                                <Delete />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                </Slide>\r\n            ))}\r\n        </MUIList>\r\n    )\r\n}\r\n\r\nexport default List\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  cartContent: {\r\n    paddingTop: 0,\r\n  },\r\n  divider: {\r\n    margin: '20px 0',\r\n  },\r\n}));","import { Card, CardContent, CardHeader, Divider, Grid, Typography } from '@material-ui/core';\r\nimport React, { useContext } from 'react';\r\nimport { ExpenseTrackerContext } from '../../context/context';\r\nimport InfoCard from '../InfoCard';\r\nimport Form from './Form/Form';\r\nimport List from './List/List';\r\nimport useStlyes from './styles';\r\n\r\n\r\nconst Main = () => {\r\n\r\n    const classes = useStlyes();\r\n    const { balance } = useContext(ExpenseTrackerContext);\r\n\r\n    return (\r\n        <Card className = {classes.root}>\r\n            <CardHeader title=\"Expense Tracker\" subheader=\"Powered by Speechly\" />\r\n            <CardContent>\r\n                <Typography align=\"center\" variant=\"h5\"> Total Balance ${balance} </Typography>\r\n                <Typography variant=\"subtitle1\" style={{ lineHeight: '1.5em', marginTop: '20px' }}>\r\n                    <InfoCard />\r\n                </Typography>\r\n                <Divider className = {classes.divider} />\r\n                <Form />\r\n            </CardContent>\r\n            <CardContent className = {classes.cardContent}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <List />\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import { useContext } from 'react';\r\nimport { ExpenseTrackerContext } from './context/context';\r\n\r\nimport { incomeCategories, expenseCategories, resetCategories } from './constants/categories';\r\n\r\nconst useTransactions = (title) => {\r\n    resetCategories();\r\n    const { transactions } = useContext(ExpenseTrackerContext);\r\n    const transactionsPerType = transactions.filter((t) => t.type === title);\r\n    const total = transactionsPerType.reduce((acc, currVal) => acc += currVal.amount, 0);\r\n    const categories = title === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n    console.log({ transactionsPerType, total, categories });\r\n\r\n    transactionsPerType.forEach((t) => {\r\n        const category = categories.find((c) => c.type === t.category);\r\n        \r\n        if (category) category.amount += t.amount;\r\n    });\r\n\r\n    const filteredCategories = categories.filter((c) => c.amount > 0);\r\n\r\n    const chartData = {\r\n        datasets: [{\r\n            data: filteredCategories.map((c) => c.amount),\r\n            backgroundColor: filteredCategories.map((c) => c.color)\r\n        }],\r\n        labels: filteredCategories.map((c) => c.type)\r\n    }\r\n    \r\n    return {total, chartData}\r\n}\r\n\r\nexport default useTransactions;","import { makeStyles } from '@material-ui/core';\r\n\r\n\r\n\r\nexport default makeStyles(() => ({\r\n    income: {\r\n        borderBottom : '10px solid rgba(0, 255, 0, 0.5)',\r\n    },\r\n    expense: {\r\n        borderBottom : '10px solid rgba(255, 0, 0, 0.5)',\r\n    }\r\n\r\n}));","import React from 'react'\r\nimport { Card, CardHeader, CardContent, Typography } from '@material-ui/core';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport useTransactions from '../../useTransactions';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst Details = ({title}) => {\r\n    const classes = useStyles();\r\n    const { total, chartData } = useTransactions(title);\r\n\r\n    return (\r\n        <Card className = {title === 'Income' ? classes.income : classes.expense} >\r\n            <CardHeader title = {title} />\r\n            <CardContent>\r\n                <Typography variant=\"h5\"> ${total} </Typography>\r\n                <Doughnut data = {chartData} />\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Details\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  desktop: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  mobile: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  main: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingBottom: '5%',\r\n    },\r\n  },\r\n  last: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginBottom: theme.spacing(3),\r\n      paddingBottom: '200px',\r\n    },\r\n  },\r\n  grid: {\r\n    '& > *': {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n}));","import React, { useRef, useEffect } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport Main from './components/Main/Main';\r\nimport Details from './components/Details/Details';\r\nimport { PushToTalkButton, PushToTalkButtonContainer, ErrorPanel } from '@speechly/react-ui';\r\nimport { SpeechState, useSpeechContext } from '@speechly/react-client';\r\n\r\n\r\nimport useStyles from './styles';\r\n\r\n\r\nconst App = () => {\r\n\r\n    const classes = useStyles();\r\n    const { speechState } = useSpeechContext();\r\n    const main = useRef(null);\r\n\r\n    const executeScroll = () => main.current.scrollIntoView();\r\n\r\n    \r\n    useEffect(() => {\r\n        if (speechState === SpeechState.Recording)\r\n        {\r\n            executeScroll();\r\n            }\r\n    }, [speechState]);\r\n\r\n    return (\r\n      <div>\r\n        <Grid\r\n          className={classes.grid}\r\n          container\r\n          spacing={0}\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ height: \"100vh\" }}\r\n        >\r\n          <Grid item xs={12} sm={4} className={classes.mobile}>\r\n            <Details title=\"Income\" />\r\n          </Grid>\r\n          <Grid ref = {main} item xs={12} sm={3} className={classes.main}>\r\n            <Main />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} className={classes.desktop}>\r\n            <Details title=\"Income\" />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Details title=\"Expense\" className = {classes.last} />\r\n          </Grid>\r\n        </Grid>\r\n        <PushToTalkButtonContainer>\r\n          <PushToTalkButton />\r\n          <ErrorPanel />\r\n        </PushToTalkButtonContainer>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default App\r\n","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { SpeechProvider } from '@speechly/react-client';\r\nimport { Provider } from './context/context';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <SpeechProvider appId = \"8d9f861c-4f68-405d-b82c-c8b1699692dc\" language = \"en-US\">\r\n        <Provider>\r\n            <App />\r\n        </Provider>\r\n    </SpeechProvider>,\r\n    document.getElementById('root')\r\n); "],"sourceRoot":""}